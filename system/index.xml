<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Systems on Rad Blog</title>
    <link>https://xfrnk2.github.io/system/</link>
    <description>Recent content in Systems on Rad Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 04 Oct 2020 00:40:00 +0900</lastBuildDate>
    <atom:link href="https://xfrnk2.github.io/system/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1. 컴퓨터 구조와 프로그래밍 모델 정리</title>
      <link>https://xfrnk2.github.io/system/computer_structure_and_programming_model/</link>
      <pubDate>Sun, 04 Oct 2020 00:40:00 +0900</pubDate>
      <guid>https://xfrnk2.github.io/system/computer_structure_and_programming_model/</guid>
      <description>추천 받은 책 &amp;ldquo;뇌를 자극하는 윈도우즈 시스템 프로그래밍-윤성우&amp;rdquo;를 읽고 공부한 내용을 정리하여 올리고자 마음 먹었다.그 첫번째 단원인 컴퓨터 구조와 프로그래밍 모델 정리다.
현대 컴퓨터 구조 주요요소 ALU(Arithmetic Logic Unit:산술 논리 장치) : 산술연산과 논리연산 컨트롤 유닛 : 해석 레지스터 (IR : Fetch시 저장 , PC : 위치 기억) I/O 버스 (후술) 폰 노이만 아키텍쳐 (Stored Program Concept) 의의 : 오늘날 컴퓨터 구조의 시초이자 일치하는 구조 최초 적용 : EDSAC(에드삭 / 1949/05/06), 고안 7년 후 탄생, 오른쪽 4번째 7인 2의 지수 최솟값 일화 형태 : 프로그램이 컴퓨터 내부에 저장되는 구조 프로그램 실행과정 전처리기 : 치환작업, (#include 등)#으로 시작하는 지시자의 지시에 따라 소스코드를 적절히 변경 컴파일러 : 사람이 사용할 수 있는 언어를 컴퓨터가 이해할수 있는, CPU에게 일을 시키기 위한 명령어 즉 기계어로, 어셈블리어로 번역 어셈블러 : 어셈블리 코드를 CPU가 이해할 수 있는 바이너리 코드로 바꾸어주는 프로그램 링커 : 프로그램 내에서 참조하는 함수나 라이브러리들을 하나로 묶는 (혹은 연결시켜주는) 작업</description>
    </item>
  </channel>
</rss>
