<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>compiler on Rad Blog</title>
    <link>https://xfrnk2.github.io/categories/compiler/</link>
    <description>Recent content in compiler on Rad Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 16 Nov 2020 17:39:02 +0900</lastBuildDate>
    
	<atom:link href="https://xfrnk2.github.io/categories/compiler/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>유한 오토마타</title>
      <link>https://xfrnk2.github.io/compiler/finite_automata/</link>
      <pubDate>Mon, 16 Nov 2020 17:39:02 +0900</pubDate>
      
      <guid>https://xfrnk2.github.io/compiler/finite_automata/</guid>
      <description>공부 목표   유한 오토마타를 이해할 수 있는지? 정규표현 -&amp;gt; 유한 오토마타로 변환할 수 있는지? 입실론 클로저(ε-closure)를 구할 수 있는지? NFA를 DFA로 변환할 수 있는지?    용어 설명  유한 오토마타 : 어떤 알파벳 T로부터 만들어지는 문자열의 특별한 것들을 받아들이는 시스템의 수학적 모델로서, 그 시스템이 변화할 수 있는 상태가 유한개인 것 비결정적 유한 오토마타 : 어떤 상태에서 주어진 하나의 입력기호를 보고, 갈 수 있는 다음 상태가 두개 이상 존재할 수 있는 유한 오토 마타 결정적 유한 오토마타 : 하나의 입력문자열에 대하여 오직 하나의 다음 상태가 결정되는 것 상태전이도 : transition diagram, 오토마타의 각 상태(state)를 노드(node)로 나타내며, 이동함수 δ(q,a) ＝p에 대해서는 태 q에서 p로 가는 레이블(label)이 a인 지시선(directed arc)으로 표기.</description>
    </item>
    
    <item>
      <title>형식언어와 형식문법</title>
      <link>https://xfrnk2.github.io/compiler/formal_language_and_formal_grammar/</link>
      <pubDate>Mon, 16 Nov 2020 17:01:02 +0900</pubDate>
      
      <guid>https://xfrnk2.github.io/compiler/formal_language_and_formal_grammar/</guid>
      <description>공부 목표   형식언어를 표현하는 기초적인 용어를 이해하는지? 형식 문법에대해 설명할 수 있는지? 문법의 표기법을 이해할 수 있는지? 정규문법을 정규표현으로 표현할 수 있는지? 각 문법에서 생성되는 문자열들을 문법규칙을 적용하여 생성할 수 있는지?    용어 설명  컴파일러 설계 : 어떤 컴퓨터 언어에 대한 컴파일러를 구성하는 일 형식 언어 : 어떤 알파벳에서 얻은 기호(symbol)들로 구성되는 문자열의 집합 context-Free 문법 : A → γ (단, A는 논터미널 기호이고, γ는 V*에 속하는 문자열 촘스키 계층구조 : 생성규칙의 형태에 가해지는 제한에 따라 미국의 영문학자 촘스키가 4종류로 나눈 형식문법 context-sensitive 문법 : γ → β (단, |γ|≤|β| γ∈V+, β∈V*)생성규칙에 |γ|≤|β|의 제한을 가하는 것으로 비위축형 (noncontracting) 문법에 속함 공문자열 : 문자열의 길이가 0인 것, ε 혹은 λ로 표시 정규문법 : A → tB A → t 또는 A → Bt A → t(단, t ∈ V *T A, B ∈ VN)</description>
    </item>
    
  </channel>
</rss>