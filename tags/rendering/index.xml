<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rendering on Rad Blog</title>
    <link>/tags/rendering/</link>
    <description>Recent content in rendering on Rad Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 26 Sep 2020 00:54:03 +0900</lastBuildDate>
    
	<atom:link href="/tags/rendering/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>서버 사이드 렌더링(Server Side Rendering: SSR) &amp; 클라이언트 사이드 렌더링(Client Side Rendering: CSR) 정리</title>
      <link>/web/ssrandcsr/</link>
      <pubDate>Sat, 26 Sep 2020 00:54:03 +0900</pubDate>
      
      <guid>/web/ssrandcsr/</guid>
      <description>최근 용어 &amp;lsquo;서버 사이드 렌더링(Server Side Rendering)&amp;lsquo;을 알게 되었는데, 리액트를 공부하며 배우게 된 SPA방식과 관계가 있다고 생각했다. 궁금해서 찾아본 내용(서버 사이드 렌더링((Server Side Rendering))과 클라이언트 사이드 렌더링(Client Side Rendering))을 간단하게 정리해 보았다.
  Server Side Rendering  전통적인 웹 어플리케이션 렌더링 방식 검색엔진 최적화 용이 서버에서 view를 렌더링해서 가져오므로 view를 보기까지 초기 구동속도가 빠름 HTML에 모든 컨텐츠가 저장되어 있으므로 검색엔진 노출에 문제가 되지 않음 사용자가 처음으로 보는 컨텐츠의 시점을 앞당길 수 있음 사용자 정보를 서버측에서 세션 관리   Client Side Rendering  SPA 방식(Single Page Application) HTML을 다운로드 받고, JS를 다운로드 받아서, JS가 동작하면서 데이터만 주고받아서 클라이언트 쪽에서 렌더링 하는 방식 브라우저가 없으므로 HTML만 가져와서는 검색에 나오지 않음.</description>
    </item>
    
  </channel>
</rss>