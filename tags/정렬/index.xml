<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>정렬 on Rad Blog</title>
    <link>https://xfrnk2.github.io/tags/%EC%A0%95%EB%A0%AC/</link>
    <description>Recent content in 정렬 on Rad Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 20 Apr 2020 00:22:17 +0900</lastBuildDate>
    
	<atom:link href="https://xfrnk2.github.io/tags/%EC%A0%95%EB%A0%AC/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>BOJ-1026-보물[정렬]</title>
      <link>https://xfrnk2.github.io/boj/1026/</link>
      <pubDate>Mon, 20 Apr 2020 00:22:17 +0900</pubDate>
      
      <guid>https://xfrnk2.github.io/boj/1026/</guid>
      <description>BOJ-1026-보물 문제 바로가기  생각 reverse로 정렬하기보다 더 좋은방법이 없나 찾아본 결과 [::-1]이 가장 좋아보였다.
순서  정렬된 리스트를 얻어오는 함수를 작성 B를 역순으로 정렬 A와 B의 각각의 원소들을 곱한 리스트를 구한다. 구해진 리스트의 값을을 모두 더한 값을 반환한다.  방법  list와 map, lambda 함수를 이용해서 구현해 보았다. 시험삼아 해보았으나 for문과 함께 zip 함수를 이용해서도 구현이 가능했다.  쟁점 거리 list[::-1]이 리스트를 정렬하는데 가장 빠르고 효과적일까?
 나의 풀이1 get_input = lambda:sorted(map(int, input().</description>
    </item>
    
  </channel>
</rss>