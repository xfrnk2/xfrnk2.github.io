<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>알고리즘 on Rad Blog</title>
    <link>https://xfrnk2.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</link>
    <description>Recent content in 알고리즘 on Rad Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 14 May 2020 18:22:50 +0900</lastBuildDate>
    
	<atom:link href="https://xfrnk2.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>BOJ-1991-트리순회[트리순회]</title>
      <link>https://xfrnk2.github.io/boj/1991/</link>
      <pubDate>Thu, 14 May 2020 18:22:50 +0900</pubDate>
      
      <guid>https://xfrnk2.github.io/boj/1991/</guid>
      <description>BOJ-1991-트리순회 문제 바로가기  나의 풀이 def pre_order(node): print(node.item, end=&#39;&#39;) if node.left_child != &#39;.&#39;: pre_order(tree[node.left_child]) if node.right_child != &#39;.&#39;: pre_order(tree[node.right_child]) def in_order(node): if node.left_child != &#39;.&#39;: in_order(tree[node.left_child]) print(node.item, end=&#39;&#39;) if node.right_child != &#39;.&#39;: in_order(tree[node.right_child]) def post_order(node): if node.left_child != &#39;.&#39;: post_order(tree[node.left_child]) if node.right_child != &#39;.&#39;: post_order(tree[node.right_child]) print(node.item, end=&#39;&#39;) class Node: def __init__(self, item, left_child, right_child): self.item = item self.left_child = left_child self.right_child = right_child if __name__ == &#39;__main__&#39;: tree = {} for _ in range(int(input())): data = input().</description>
    </item>
    
    <item>
      <title>BOJ-10814-나이순 정렬[정렬]</title>
      <link>https://xfrnk2.github.io/boj/10814/</link>
      <pubDate>Thu, 14 May 2020 18:21:50 +0900</pubDate>
      
      <guid>https://xfrnk2.github.io/boj/10814/</guid>
      <description>BOJ-10814-나이순 정렬 문제 바로가기  나의 풀이 from operator import itemgetter arr = [list(map(lambda x: int(x) if x.isdecimal() else x, input().split()))+[i] for i in range(int(input()))] arr.sort(key=itemgetter(0, 2)) for x in arr: print(f&amp;quot;{x[0]} {x[1]}&amp;quot;) 순서  정수인지 확인해서 정수인 경우 int와 매핑 인덱스를 값 후열에 추가 1순위를 나이 기준, 2순위를 생성된 순서(=인덱스)로 정렬 나이와 이름 출력  방법  정수 확인을 isdecimal()을 사용 -&amp;gt;[참고링크 바로가기] operator.itemgetter를 사용, lambda함수도 사용 가능  </description>
    </item>
    
    <item>
      <title>BOJ-18870-좌표압축[알고리즘]</title>
      <link>https://xfrnk2.github.io/boj/18870/</link>
      <pubDate>Thu, 14 May 2020 18:20:50 +0900</pubDate>
      
      <guid>https://xfrnk2.github.io/boj/18870/</guid>
      <description>BOJ-18870-좌표압축 문제 바로가기  나의 풀이 input() arr = list(map(int, input().split())) values_by_key = {} for i,j in enumerate(sorted(set(arr))): values_by_key[j] = i for x in arr: print(values_by_key[x], end=&#39; &#39;) 생각  중복값을 제거하고 컨테이너로 어떻게 전달할까?  순서  중복값 제거한 오름차순 정렬이 된 리스트를 순회 값을 키로, 인덱스를 해당 값의 값으로 저장 초기 리스트 순회하여 저장한 컨테이너로부터 찾아내서 출력  방법  set()으로 중복값 제거, list로 형변환 딕셔너리 사용  </description>
    </item>
    
    <item>
      <title>BOJ-4949-균형잡힌 세상[문자열 처리]</title>
      <link>https://xfrnk2.github.io/boj/4949/</link>
      <pubDate>Sat, 09 May 2020 00:48:07 +0900</pubDate>
      
      <guid>https://xfrnk2.github.io/boj/4949/</guid>
      <description>BOJ-4949-균형잡힌 세상 문제 바로가기  나의 풀이 def get_result(sentence: str) -&amp;gt; bool: bracket_stack = [] for s in sentence: if s.isalpha(): continue elif s == &amp;quot;(&amp;quot;: bracket_stack.append(1) elif s == &amp;quot;[&amp;quot;: bracket_stack.append(0) elif s == &amp;quot;)&amp;quot; or s == &amp;quot;]&amp;quot;: try: if bracket_stack[-1] == 0 and s == &amp;quot;)&amp;quot;: return False elif bracket_stack[-1] == 1 and s == &amp;quot;]&amp;quot;: return False bracket_stack.pop() except IndexError: return False return not bracket_stack if __name__ == &#39;__main__&#39;: sentence_list = [] while True: get_input = input() if get_input == &#39;.</description>
    </item>
    
  </channel>
</rss>